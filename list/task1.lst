     1                                  section	.rodata
     2                                  LC0:
     3 00000000 25730A00                	DB	"%s", 10, 0	; Format string
     4                                  
     5                                  section .bss
     6                                  LC1:
     7 00000000 <res 00000100>          	RESB	256
     8                                  
     9                                  section .text
    10                                  	align 16
    11                                  	global my_func
    12                                  	extern printf
    13                                  
    14                                  my_func:
    15 00000000 55                      	push	ebp
    16 00000001 89E5                    	mov	ebp, esp	; Entry code - set up ebp and esp
    17 00000003 60                      	pushad			; Save registers
    18                                  
    19 00000004 8B4D08                  	mov ecx, dword [ebp+8]	; Get argument (pointer to string)
    20                                  
    21                                  	b0:
    22 00000007 BA[00000000]            	mov edx, LC1
    23 0000000C B800000000              	mov eax, 0
    24 00000011 BB00000000              	mov ebx,0
    25                                  	b1:
    26                                  	myloop: 
    27 00000016 80390A                  		cmp byte[ecx],0x0a
    28 00000019 7430                    		je exitloop 
    29 0000001B 8A01                    		mov al, byte[ecx]
    30                                  		
    31 0000001D 83E830                  		sub eax,48
    32 00000020 B310                    		mov bl,16
    33 00000022 F6E3                    		mul bl
    34 00000024 41                      		inc ecx
    35 00000025 8A19                    		mov bl, byte[ecx]
    36                                  		b2:
    37 00000027 E808000000              		call checktype
    38                                  		b3:
    39 0000002C 01C3                    		add ebx,eax
    40 0000002E 891A                    		mov [edx], ebx
    41                                  		b4:
    42 00000030 42                      		inc edx
    43 00000031 41                      		inc ecx
    44 00000032 EBE2                    		jmp myloop
    45                                  
    46                                  
    47                                  	checktype:
    48 00000034 80FB39                  		cmp bl, '9'
    49 00000037 7F04                    		jg ischar
    50 00000039 80EB30                  		sub bl, 48
    51 0000003C C3                      		ret
    52                                  	ischar:
    53 0000003D 80FB5A                  		cmp bl, 'Z'
    54 00000040 7E04                    		jle capchar
    55 00000042 80EB57                  		sub bl, 'W'
    56 00000045 C3                      		ret
    57                                  	capchar:
    58 00000046 80C320                  		add bl, 32
    59 00000049 EBF2                    		jmp ischar
    60                                  	exitloop:
    61                                  
    62                                  
    63 0000004B 68[00000000]            	push	LC1		; Call printf with 2 arguments: pointer to str
    64 00000050 68[00000000]            	push	LC0		; and pointer to format string.
    65 00000055 E8(00000000)            	call	printf
    66 0000005A 83C408                  	add 	esp, 8		; Clean up stack after call
    67                                  
    68 0000005D 61                      	popad			; Restore registers
    69 0000005E 89EC                    	mov	esp, ebp	; Function exit code
    70 00000060 5D                      	pop	ebp
    71 00000061 C3                      	ret
    72                                  
