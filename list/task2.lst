     1                                  
     2                                  
     3                                  section	.rodata
     4                                  LC0:
     5 00000000 25640A00                	DB	"%d", 10, 0	; Format integer
     6                                  LC1:
     7 00000004 78206F72206B2C206F-     	DB "x or k, or both are off range",10,0 ;Format not legal input
     8 0000000D 7220626F7468206172-
     9 00000016 65206F66662072616E-
    10 0000001F 67650A00           
    11                                  
    12                                  section .text
    13                                  	align 16
    14                                  	global calc_div
    15                                  	extern printf
    16                                  	extern check
    17                                  
    18                                  calc_div:
    19 00000000 55                      	push	ebp
    20 00000001 89E5                    	mov	ebp, esp	; Entry code - set up ebp and esp
    21 00000003 60                      	pushad			; Save registers
    22                                  
    23 00000004 8B4D0C                  	mov ecx, dword [ebp+12]	; Get argument int k
    24 00000007 8B5D08                  	mov ebx, dword [ebp+8] ; Get argument int x
    25                                  
    26 0000000A 51                      	push ecx
    27 0000000B 53                      	push ebx
    28 0000000C E8(00000000)            	call check
    29 00000011 83C408                  	add esp, 8 ; Clean up stack after call
    30                                  	
    31 00000014 83F800                  	cmp eax,0 ;Check return value
    32 00000017 7420                    	je notlegal
    33                                  	
    34 00000019 89D8                    	mov eax,ebx
    35 0000001B BB01000000              	mov ebx,1
    36 00000020 D3E3                    	shl ebx,cl
    37 00000022 66BA0000                	mov dx,0
    38 00000026 66F7F3                  	div bx
    39 00000029 50                      	push eax
    40 0000002A 68[00000000]            	push LC0
    41 0000002F E8(00000000)            	call printf
    42 00000034 83C408                  	add esp, 8 ; Clean up stack after call
    43 00000037 EB0D                    	jmp endCall
    44                                  
    45                                  notlegal:
    46 00000039 68[04000000]            	push LC1
    47 0000003E E8(00000000)            	call printf
    48 00000043 83C408                  	add esp, 8 ; Clean up stack after call
    49                                  
    50                                  endCall:
    51 00000046 61                      	popad			; Restore registers
    52 00000047 89EC                    	mov	esp, ebp	; Function exit code
    53 00000049 5D                      	pop	ebp
    54 0000004A C3                      	ret
    55                                  
    56                                  
    57                                  
    58                                  
    59                                  
